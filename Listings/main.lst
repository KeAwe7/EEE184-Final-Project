C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 13:00:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "lcd.h"
   3          #include "ds1302.h"
   4          
   5          sbit Buzzer=P2^5;
   6          
   7          sbit LED1 = P2^0;  // LED pins
   8          sbit LED2 = P2^1;
   9          sbit LED3 = P2^2;
  10          
  11          sbit K1=P3^1;
  12          sbit K2=P3^0;
  13          sbit K3=P3^2;
  14          sbit K4=P3^3;  //????
  15          
  16          unsigned char AlarmSet = 0;
  17          unsigned char AlarmTriggered = 0;
  18          unsigned char LEDState = 0;
  19          unsigned char ALARM[7] = { 0x05,    0x00,  0x07, 0x20,  0x05, 0x01, 0x24};
  20          unsigned char TempTime[3];
  21          
  22          void Int0Configuration();
  23          void LcdDisplay();
  24          unsigned char SetState,SetPlace;
  25          void Delay10ms(void);   //?? 0us
  26          
  27          typedef unsigned int u16;
  28          
  29          void delay(u16 j)
  30          {
  31   1        while(j--);
  32   1      }
  33          
  34          void main()
  35          {
  36   1        unsigned char i;
  37   1      
  38   1        Int0Configuration();
  39   1        LcdInit();
  40   1        Ds1302Init();
  41   1        while(1)
  42   1        { 
  43   2          if(SetState==0)
  44   2          {
  45   3            if(!AlarmTriggered){
  46   4              Ds1302ReadTime();
  47   4            }
  48   3            LcdWriteCom(0xC9); 
  49   3            LcdWriteData(' ');
  50   3            
  51   3            // Check if alarm time matches current time
  52   3            if (!AlarmTriggered && TIME[0] == ALARM[0] && TIME[1] == ALARM[1] && TIME[2] == ALARM[2])
  53   3            {
  54   4                AlarmTriggered = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 13:00:05 PAGE 2   

  55   4            }
  56   3            
  57   3            if(AlarmTriggered){
  58   4              LEDState = !LEDState; // Toggle LED state to create blinking effect
  59   4              LED1 = LEDState;
  60   4              LED2 = LEDState;
  61   4              LED3 = LEDState;
  62   4              Buzzer = ~Buzzer;
  63   4              delay(100);
  64   4            }
  65   3            
  66   3            if(AlarmTriggered && K4 == 0) {
  67   4              Delay10ms();
  68   4              if(K4==0) {
  69   5                Buzzer = 1;
  70   5                AlarmTriggered = 0;
  71   5              }
  72   4              while(K4==0);
  73   4            
  74   4            }
  75   3            
  76   3          }
  77   2          else
  78   2          {
  79   3            
  80   3            LcdWriteCom(0xC9); // Set DDRAM address to 0xC9
  81   3              switch (SetPlace)
  82   3              {
  83   4                  case 0:
  84   4                      LcdWriteData('S'); // Seconds
  85   4                      break;
  86   4                  case 1:
  87   4                      LcdWriteData('m'); // Minutes
  88   4                      break;
  89   4                  case 2:
  90   4                      LcdWriteData('H'); // Hours
  91   4                      break;
  92   4                  case 3:
  93   4                      LcdWriteData('D'); // Day
  94   4                      break;
  95   4                  case 4:
  96   4                      LcdWriteData('M'); // Month
  97   4                      break;
  98   4                  case 5:
  99   4                      LcdWriteData('W'); // Weekday
 100   4                      break;
 101   4                  case 6:
 102   4                      LcdWriteData('Y'); // Year
 103   4                      break;
 104   4              }
 105   3            
 106   3            if(K1==0)
 107   3            {
 108   4              Delay10ms();
 109   4              if(K1==0)
 110   4              {
 111   5                SetPlace++;
 112   5                if(SetPlace>=7)
 113   5                  SetPlace=0;         
 114   5              }
 115   4      
 116   4              while((i<50)&&(K1==0))
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 13:00:05 PAGE 3   

 117   4              {
 118   5                Delay10ms();
 119   5                i++;
 120   5              }
 121   4              i=0;
 122   4            }
 123   3            if(K2==0)
 124   3            {
 125   4              Delay10ms();  //????
 126   4              if(K2==0)
 127   4              {
 128   5                
 129   5                if (AlarmSet) { // Only increment ALARM if alarm is set
 130   6                              ALARM[SetPlace]++; 
 131   6                              if ((ALARM[SetPlace] & 0x0f) > 9) {
 132   7                                  ALARM[SetPlace] = ALARM[SetPlace] + 6; 
 133   7                              }
 134   6                              if ((ALARM[SetPlace] >= 0x60) && (SetPlace < 2)) {
 135   7                                  ALARM[SetPlace] = 0;
 136   7                              }
 137   6                              if ((ALARM[SetPlace] >= 0x24) && (SetPlace == 2)) {
 138   7                                  ALARM[SetPlace] = 0;
 139   7                              }
 140   6                          }
 141   5                
 142   5                else {
 143   6                
 144   6                
 145   6                TIME[SetPlace]++;
 146   6                if((TIME[SetPlace]&0x0f)>9)          // Change to BCD code.
 147   6                {
 148   7                  TIME[SetPlace]=TIME[SetPlace]+6;
 149   7                }
 150   6                if((TIME[SetPlace]>=0x60)&&(SetPlace<2))    // Minutes and seconds can only go to 59
 151   6                {
 152   7                  TIME[SetPlace]=0;
 153   7                }
 154   6                if((TIME[SetPlace]>=0x24)&&(SetPlace==2))   // Hours only go to 23
 155   6                {
 156   7                  TIME[SetPlace]=0;
 157   7                }
 158   6                if((TIME[SetPlace]>=0x32)&&(SetPlace==3))   // Day only goes to 31
 159   6                {
 160   7                  TIME[SetPlace]=0; 
 161   7                }
 162   6                if((TIME[SetPlace]>=0x13)&&(SetPlace==4))   // Month can only go to 12
 163   6                {
 164   7                  TIME[SetPlace]=0;
 165   7                } 
 166   6                if((TIME[SetPlace]>=0x7)&&(SetPlace==5))    // Week can only go to 7
 167   6                {
 168   7                  TIME[SetPlace]=1;
 169   7                }   
 170   6              }
 171   5            }
 172   4              
 173   4              while((i<50)&&(K2==0))
 174   4              {
 175   5                Delay10ms();
 176   5                i++;
 177   5              }
 178   4              i=0;
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 13:00:05 PAGE 4   

 179   4            }
 180   3              if(K4==0){
 181   4                Delay10ms();
 182   4                if(K4==0) {
 183   5                  AlarmSet = ~AlarmSet;
 184   5                  LcdWriteCom(0xCD); // Set DDRAM address for 'A' position
 185   5                          if (AlarmSet) {
 186   6                              LcdWriteData('A');
 187   6                              for (i = 0; i < 3; i++) {
 188   7                                  TempTime[i] = TIME[i];
 189   7                              }
 190   6                          } else {
 191   6                              LcdWriteData(' '); // Clear 'A' if alarm mode is done
 192   6                              for (i = 0; i < 3; i++) {
 193   7                                  TIME[i] = TempTime[i];
 194   7                              }
 195   6                          }
 196   5                }
 197   4                while(K4==0);
 198   4              }
 199   3              if (AlarmSet) {
 200   4              for (i = 0; i < 3; i++) {
 201   5                      TIME[i] = ALARM[i]; // Update TIME for display purposes
 202   5                  }
 203   4              }
 204   3          }
 205   2                LcdDisplay(); 
 206   2          }
 207   1        
 208   1          }
 209            
 210          
 211          
 212          void LcdDisplay()
 213          {
 214   1        LcdWriteCom(0x80+0X40);
 215   1        LcdWriteData('0'+TIME[2]/16);       // Hour 
 216   1        LcdWriteData('0'+(TIME[2]&0x0f));        
 217   1        LcdWriteData('-');
 218   1        LcdWriteData('0'+TIME[1]/16);       // Minutes
 219   1        LcdWriteData('0'+(TIME[1]&0x0f)); 
 220   1        LcdWriteData('-');
 221   1        LcdWriteData('0'+TIME[0]/16);       // Seconds
 222   1        LcdWriteData('0'+(TIME[0]&0x0f));
 223   1      
 224   1        LcdWriteCom(0x80);
 225   1        LcdWriteData('2');
 226   1        LcdWriteData('0');
 227   1        LcdWriteData('0'+TIME[6]/16);     // Year
 228   1        LcdWriteData('0'+(TIME[6]&0x0f));
 229   1        LcdWriteData('-');
 230   1        LcdWriteData('0'+TIME[4]/16);     // Month
 231   1        LcdWriteData('0'+(TIME[4]&0x0f));
 232   1        LcdWriteData('-');
 233   1        LcdWriteData('0'+TIME[3]/16);     // Day
 234   1        LcdWriteData('0'+(TIME[3]&0x0f));
 235   1        LcdWriteCom(0x8D);
 236   1        LcdWriteData('0'+(TIME[5]&0x07)); // Week    
 237   1      }
 238          
 239          void Int0Configuration()
 240          {
C51 COMPILER V9.60.7.0   MAIN                                                              05/19/2024 13:00:05 PAGE 5   

 241   1        // Setup INT0
 242   1        IT0=1;  // Jump edge departure mode (falling edge)
 243   1        EX0=1;  // Turn on interrupt allow for INT0.
 244   1        EA=1;   // Turn on general interrupt
 245   1      }
 246          
 247          void Int0() interrupt 0    
 248          {
 249   1        Delay10ms();
 250   1        if(K3==0)
 251   1        {
 252   2          SetState=~SetState;
 253   2          SetPlace=0;
 254   2          Ds1302Init(); 
 255   2        }
 256   1      }
 257          
 258          void Delay10ms(void)
 259          {
 260   1          unsigned char a,b,c;
 261   1          for(c=1;c>0;c--)
 262   1              for(b=38;b>0;b--)
 263   1                  for(a=130;a>0;a--);
 264   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    845    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
